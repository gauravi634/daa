# Smallest Weight First
def Knapsack_by_weight(wt, profit, cap):
    items = [(i, wt[i], profit[i], wt[i] / profit[i]) for i in range(len(wt))]
    items.sort(key=lambda x: x[1])
    total_profit = 0
    include_items = []
    for i, item_wt, item_profit, ratio in items:
        if cap >= item_wt:
            include_items.append((i, 1))
            total_profit += item_profit
            cap -= item_wt
        else:
            frac = cap / item_wt
            total_profit += frac * item_profit
            include_items.append((i, frac))
            break
    return total_profit, include_items


# Largest Profit-to-Weight Ratio First
def Knapsack_by_ratio(wt, profit, cap):
    items = [(i, wt[i], profit[i], wt[i] / profit[i]) for i in range(len(wt))]
    items.sort(key=lambda x: x[3], reverse=True)
    total_profit = 0
    include_items = []
    for i, item_wt, item_profit, ratio in items:
        if cap >= item_wt:
            include_items.append((i, 1))
            total_profit += item_profit
            cap -= item_wt
        else:
            frac = cap / item_wt
            total_profit += frac * item_profit
            include_items.append((i, frac))
            break
    return total_profit, include_items


# Largest Profit First
def Knapsack_by_profit(wt, profit, cap):
    items = [(i, wt[i], profit[i], wt[i] / profit[i]) for i in range(len(wt))]
    items.sort(key=lambda x: x[2], reverse=True)
    total_profit = 0
    include_items = []
    for i, item_wt, item_profit, ratio in items:
        if cap >= item_wt:
            include_items.append((i, 1))
            total_profit += item_profit
            cap -= item_wt
        else:
            frac = cap / item_wt
            total_profit += frac * item_profit
            include_items.append((i, frac))
            break
    return total_profit, include_items


# Main execution
wt = [30, 20, 10]
profit = [60, 50, 40]
cap = 50

tp1, items1 = Knapsack_by_weight(wt, profit, cap)
print("\n[By Smallest Weight]")
print("Total profit is:", tp1)
print("Include items are:", items1)

tp2, items2 = Knapsack_by_ratio(wt, profit, cap)
print("\n[By Largest Ratio]")
print("Total profit is:", tp2)
print("Include items are:", items2)

tp3, items3 = Knapsack_by_profit(wt, profit, cap)
print("\n[By Largest Profit]")
print("Total profit is:", tp3)
print("Include items are:", items3)
